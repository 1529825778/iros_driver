error: No best alternative for ./::
    next alternative: required properties: (empty)
        matched
    next alternative: required properties: (empty)
        matched
error: No best alternative for ./<search>/usr/lib
    next alternative: required properties: (empty)
        matched
    next alternative: required properties: (empty)
        matched
   WARNING: Could not parse code revision string "ccc6128~".
            Using default values.
Performing configuration checks

    - 32-bit                   : no  (cached)
    - 64-bit                   : yes (cached)
    - arm                      : no  (cached)
    - mips1                    : no  (cached)
    - power                    : no  (cached)
    - sparc                    : no  (cached)
    - x86                      : yes (cached)
...patience...
...patience...
...found 7465 targets...
...updating 2 targets...
gcc.compile.c++ /home/linman/iros_driver/src/out/gcc-11/release/link-static/parse_owl.o
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:27,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/mpl/assert.hpp:188:21: warning: unnecessary parentheses in declaration of ‘assert_arg’ [-Wparentheses]
  188 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
  189 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  190 |     );
      |     ~                
/home/linman/boost_1_58_0/boost/mpl/assert.hpp:188:21: note: remove parentheses
  188 | failed ************ (Pred::************
      |                     ^~~~~~~~~~~~~~~~~~~
      |                     -
  189 |       assert_arg( void (*)(Pred), typename assert_arg_pred<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  190 |     );
      |     ~                
      |     -
/home/linman/boost_1_58_0/boost/mpl/assert.hpp:193:21: warning: unnecessary parentheses in declaration of ‘assert_not_arg’ [-Wparentheses]
  193 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  194 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  195 |     );
      |     ~                
/home/linman/boost_1_58_0/boost/mpl/assert.hpp:193:21: note: remove parentheses
  193 | failed ************ (boost::mpl::not_<Pred>::************
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     -
  194 |       assert_not_arg( void (*)(Pred), typename assert_arg_pred_not<Pred>::type )
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  195 |     );
      |     ~                
      |     -
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:341:49: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  341 |         explicit reversible_ptr_container( std::auto_ptr<PtrContainer> clone )
      |                                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:358:51: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  358 |         reversible_ptr_container& operator=( std::auto_ptr<PtrContainer> clone ) // nothrow
      |                                                   ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:572:48: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  572 |         iterator insert( iterator before, std::auto_ptr<U> x )
      |                                                ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:636:49: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  636 |         auto_type replace( iterator where, std::auto_ptr<U> x )
      |                                                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:656:48: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  656 |         auto_type replace( size_type idx, std::auto_ptr<U> x )
      |                                                ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:223:45: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  223 |         explicit ptr_sequence_adapter( std::auto_ptr<PtrContainer> clone )
      |                                             ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:234:47: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  234 |         ptr_sequence_adapter& operator=( std::auto_ptr<PtrContainer> clone )
      |                                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:254:30: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  254 |         void push_back( std::auto_ptr<U> x )
      |                              ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:269:31: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  269 |         void push_front( std::auto_ptr<U> x )
      |                               ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:681:23: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  681 |     explicit PC( std::auto_ptr<this_type> r )       \
      |                       ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:684:25: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  684 |     PC& operator=( std::auto_ptr<this_type> r )     \
      |                         ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:690:10: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  690 |     std::auto_ptr<this_type> release()              \
      |          ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:698:10: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  698 |     std::auto_ptr<this_type> clone() const          \
      |          ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp: In member function ‘std::auto_ptr<boost::ptr_vector<T, CloneAllocator, Allocator> > boost::ptr_vector<T, CloneAllocator, Allocator>::release()’:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:692:12: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  692 |       std::auto_ptr<this_type> ptr( new this_type );\
      |            ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/ptr_container/ptr_sequence_adapter.hpp:20,
                 from /home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp: In member function ‘std::auto_ptr<boost::ptr_vector<T, CloneAllocator, Allocator> > boost::ptr_vector<T, CloneAllocator, Allocator>::clone() const’:
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:700:20: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  700 |        return std::auto_ptr<this_type>( new this_type( this->begin(), this->end() ) ); \
      |                    ^~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:730:4: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE’
  730 |    BOOST_PTR_CONTAINER_DEFINE_RELEASE_AND_CLONE( PC, base_type, this_type )
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/detail/reversible_ptr_container.hpp:733:5: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS’
  733 |     BOOST_PTR_CONTAINER_DEFINE_NON_INHERITED_MEMBERS( PC, base_type, this_type )  \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/ptr_container/ptr_vector.hpp:45:9: note: in expansion of macro ‘BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS’
   45 |         BOOST_PTR_CONTAINER_DEFINE_SEQEUENCE_MEMBERS( ptr_vector,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp: At global scope:
/home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:42:17: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   42 |    typedef std::auto_ptr<node_type> ptr_t;
      |                 ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:14,
                 from parse_owl.cpp:5:
/home/linman/owl_cpp/include/owlcpp/rdf/map_node.hpp:195:9: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
  195 |    std::auto_ptr<Node> remove(const Node_id id) {
      |         ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/bind/mem_fn.hpp:25,
                 from /home/linman/boost_1_58_0/boost/mem_fn.hpp:22,
                 from /home/linman/boost_1_58_0/boost/bind/bind.hpp:26,
                 from /home/linman/boost_1_58_0/boost/bind.hpp:22,
                 from /home/linman/boost_1_58_0/boost/multi_index/ordered_index.hpp:78,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_ns_prefix.hpp:11,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_ns.hpp:16,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:15,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/get_pointer.hpp:27:40: warning: ‘template<class> class std::auto_ptr’ is deprecated: use 'std::unique_ptr' instead [-Wdeprecated-declarations]
   27 | template<class T> T * get_pointer(std::auto_ptr<T> const& p)
      |                                        ^~~~~~~~
In file included from /usr/include/c++/11/memory:76,
                 from /home/linman/boost_1_58_0/boost/config/no_tr1/memory.hpp:21,
                 from /home/linman/boost_1_58_0/boost/smart_ptr/shared_ptr.hpp:23,
                 from /home/linman/boost_1_58_0/boost/shared_ptr.hpp:17,
                 from /home/linman/boost_1_58_0/boost/exception/get_error_info.hpp:18,
                 from /home/linman/boost_1_58_0/boost/exception/diagnostic_information.hpp:16,
                 from /home/linman/boost_1_58_0/boost/exception/all.hpp:15,
                 from /home/linman/owl_cpp/include/owlcpp/exception.hpp:10,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/usr/include/c++/11/bits/unique_ptr.h:57:28: note: declared here
   57 |   template<typename> class auto_ptr;
      |                            ^~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:322:7:   required from ‘struct boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >, boost::concepts::constraint<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >, boost::concepts::requirement<boost::concepts::failed************ boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>)>’
/home/linman/owl_cpp/include/owlcpp/rdf/map_std.hpp:48:7:   required from ‘static const owlcpp::Map_std& owlcpp::Map_std::get(const T&) [with T = owlcpp::Nodes_owl]’
/home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:60:32:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>]’:
/home/linman/owl_cpp/include/owlcpp/rdf/map_std.hpp:48:7:   required from ‘static const owlcpp::Map_std& owlcpp::Map_std::get(const T&) [with T = owlcpp::Nodes_owl]’
/home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:60:32:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::UnaryFunction<Func, Return, Arg>::~UnaryFunction() [with Func = owlcpp::Nodes_owl; Return = void; Arg = owlcpp::Map_std&]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:322:7: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  322 |       BOOST_CONCEPT_USAGE(UnaryFunction) { test(is_void<Return>()); }
      |       ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:322:7:   required from ‘struct boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >, boost::concepts::constraint<boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&> >, boost::concepts::requirement<boost::concepts::failed************ boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::UnaryFunction<owlcpp::Nodes_owl, void, owlcpp::Map_std&>)>’
/home/linman/owl_cpp/include/owlcpp/rdf/map_std.hpp:48:7:   required from ‘static const owlcpp::Map_std& owlcpp::Map_std::get(const T&) [with T = owlcpp::Nodes_owl]’
/home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:60:32:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::UnaryFunction<Func, Return, Arg>::~UnaryFunction() [with Func = owlcpp::Nodes_owl; Return = void; Arg = owlcpp::Map_std&]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:322:7: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  322 |       BOOST_CONCEPT_USAGE(UnaryFunction) { test(is_void<Return>()); }
      |       ^~~~~~~~~~~~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, Capbility>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Tp = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Capbility> >]’:
/usr/include/c++/11/bits/alloc_traits.h:516:17:   required from ‘static void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = std::pair<const std::__cxx11::basic_string<char>, Capbility>; _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Tp = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Capbility> > >]’
/usr/include/c++/11/bits/stl_tree.h:595:32:   required from ‘void std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_construct_node(std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type, _Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Capbility>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Capbility> >*]’
/usr/include/c++/11/bits/stl_tree.h:612:21:   required from ‘std::_Rb_tree_node<_Val>* std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_create_node(_Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Capbility>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_Link_type = std::_Rb_tree_node<std::pair<const std::__cxx11::basic_string<char>, Capbility> >*]’
/usr/include/c++/11/bits/stl_tree.h:2384:33:   required from ‘std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_emplace_unique(_Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Key = std::__cxx11::basic_string<char>; _Val = std::pair<const std::__cxx11::basic_string<char>, Capbility>; _KeyOfValue = std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >]’
/usr/include/c++/11/bits/stl_map.h:577:33:   required from ‘std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::emplace(_Args&& ...) [with _Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Capbility*}; _Key = std::__cxx11::basic_string<char>; _Tp = Capbility; _Compare = std::less<std::__cxx11::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other>::iterator = std::_Rb_tree<std::__cxx11::basic_string<char>, std::pair<const std::__cxx11::basic_string<char>, Capbility>, std::_Select1st<std::pair<const std::__cxx11::basic_string<char>, Capbility> >, std::less<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> > >::iterator; typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> >::other = std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<std::pair<const _Key, _Tp> > = __gnu_cxx::__alloc_traits<std::allocator<std::pair<const std::__cxx11::basic_string<char>, Capbility> >, std::pair<const std::__cxx11::basic_string<char>, Capbility> >::rebind<std::pair<const std::__cxx11::basic_string<char>, Capbility> >; typename _Alloc::value_type = std::pair<const std::__cxx11::basic_string<char>, Capbility>]’
parse_owl.cpp:78:51:   required from here
/usr/include/c++/11/ext/new_allocator.h:162:11: error: no matching function for call to ‘std::pair<const std::__cxx11::basic_string<char>, Capbility>::pair(std::__cxx11::basic_string<char>, Capbility*)’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:452:9: note: candidate: ‘template<class ... _Args1, long unsigned int ..._Indexes1, class ... _Args2, long unsigned int ..._Indexes2> std::pair<_T1, _T2>::pair(std::tuple<_Args1 ...>&, std::tuple<_Args2 ...>&, std::_Index_tuple<_Indexes1 ...>, std::_Index_tuple<_Indexes2 ...>) [with _Args1 = {_Args1 ...}; long unsigned int ..._Indexes1 = {_Indexes1 ...}; _Args2 = {_Args2 ...}; long unsigned int ..._Indexes2 = {_Indexes2 ...}; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  452 |         pair(tuple<_Args1...>&, tuple<_Args2...>&,
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:452:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘std::tuple<_Tps ...>’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:387:9: note: candidate: ‘template<class ... _Args1, class ... _Args2> std::pair<_T1, _T2>::pair(std::piecewise_construct_t, std::tuple<_Args1 ...>, std::tuple<_Args2 ...>) [with _Args1 = {_Args1 ...}; _Args2 = {_Args2 ...}; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  387 |         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
      |         ^~~~
/usr/include/c++/11/bits/stl_pair.h:387:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   mismatched types ‘std::tuple<_Tps ...>’ and ‘Capbility*’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:381:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  381 |         explicit constexpr pair(pair<_U1, _U2>&& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:381:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘std::pair<_T1, _T2>’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:371:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  371 |         constexpr pair(pair<_U1, _U2>&& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:371:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘std::pair<_T1, _T2>’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:361:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && (! _ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  361 |         explicit constexpr pair(_U1&& __x, _U2&& __y)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:361:28: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:360:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  360 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_MoveConstructiblePair<_U1, _U2>() && _ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  352 |         constexpr pair(_U1&& __x, _U2&& __y)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:352:19: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:351:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  351 |                          bool>::type=true>
      |                                      ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<false, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<false, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  343 |        explicit pair(const _T1& __x, _U2&& __y)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:343:17: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:342:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  342 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note: candidate: ‘template<class _U2, typename std::enable_if<_CopyMovePair<true, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, _U2&&) [with _U2 = _U2; typename std::enable_if<std::_PCC<true, _T1, _T2>::_CopyMovePair<true, _T1, _U2>(), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  336 |        constexpr pair(const _T1& __x, _U2&& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:336:18: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:335:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  335 |                          bool>::type=true>
      |                                      ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<false, _U1, Capbility>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<false, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  329 |        explicit constexpr pair(_U1&& __x, const _T2& __y)
      |                           ^~~~
/usr/include/c++/11/bits/stl_pair.h:329:27: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:328:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  328 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note: candidate: ‘template<class _U1, typename std::enable_if<_MoveCopyPair<true, _U1, Capbility>(), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(_U1&&, const _T2&) [with _U1 = _U1; typename std::enable_if<std::_PCC<true, _T1, _T2>::_MoveCopyPair<true, _U1, _T2>(), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  322 |        constexpr pair(_U1&& __x, const _T2& __y)
      |                  ^~~~
/usr/include/c++/11/bits/stl_pair.h:322:18: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   cannot convert ‘std::forward<Capbility*>((* & __args#1))’ (type ‘Capbility*’) to type ‘const Capbility&’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:309:28: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  309 |         explicit constexpr pair(const pair<_U1, _U2>& __p)
      |                            ^~~~
/usr/include/c++/11/bits/stl_pair.h:309:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const std::pair<_T1, _T2>’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:300:19: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<const std::__cxx11::basic_string<char>, _U1>::value) || (! std::is_same<Capbility, _U2>::value)), const std::__cxx11::basic_string<char>, Capbility>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<((! std::is_same<_T1, _U1>::value) || (! std::is_same<_T2, _U2>::value)), _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  300 |         constexpr pair(const pair<_U1, _U2>& __p)
      |                   ^~~~
/usr/include/c++/11/bits/stl_pair.h:300:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   ‘std::__cxx11::basic_string<char>’ is not derived from ‘const std::pair<_T1, _T2>’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:276:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && (! _ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && (! std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>())), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  276 |       explicit constexpr pair(const _T1& __a, const _T2& __b)
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:276:26: note:   template argument deduction/substitution failed:
/usr/include/c++/11/bits/stl_pair.h:275:38: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  275 |                          bool>::type=false>
      |                                      ^~~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<(_ConstructiblePair<_U1, _U2>() && _ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair(const _T1&, const _T2&) [with _U1 = _U1; _U2 = _U2; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_ConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  266 |       constexpr pair(const _T1& __a, const _T2& __b)
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:266:17: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   cannot convert ‘std::forward<Capbility*>((* & __args#1))’ (type ‘Capbility*’) to type ‘const Capbility&’
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:245:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::is_default_constructible<_U1>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  245 |       explicit constexpr pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:245:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   candidate expects 0 arguments, 2 provided
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:232:26: note: candidate: ‘template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::pair<_T1, _T2>::pair() [with _U1 = _U1; _U2 = _U2; typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> = <anonymous>; _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  232 |       _GLIBCXX_CONSTEXPR pair()
      |                          ^~~~
/usr/include/c++/11/bits/stl_pair.h:232:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33,
                 from /usr/include/c++/11/bits/allocator.h:46,
                 from /usr/include/c++/11/bits/stl_tree.h:64,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/ext/new_allocator.h:162:11: note:   candidate expects 0 arguments, 2 provided
  162 |         { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/11/bits/stl_algobase.h:64,
                 from /usr/include/c++/11/bits/stl_tree.h:63,
                 from /usr/include/c++/11/map:60,
                 from Capbility.h:4,
                 from parse_owl.cpp:1:
/usr/include/c++/11/bits/stl_pair.h:315:17: note: candidate: ‘std::pair<_T1, _T2>::pair(std::pair<_T1, _T2>&&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  315 |       constexpr pair(pair&&) = default;         ///< Move constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:315:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/11/bits/stl_pair.h:314:17: note: candidate: ‘std::pair<_T1, _T2>::pair(const std::pair<_T1, _T2>&) [with _T1 = const std::__cxx11::basic_string<char>; _T2 = Capbility]’
  314 |       constexpr pair(const pair&) = default;    ///< Copy constructor
      |                 ^~~~
/usr/include/c++/11/bits/stl_pair.h:314:17: note:   candidate expects 1 argument, 2 provided
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:168:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:123:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >, boost::concepts::constraint<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >, boost::concepts::requirement<boost::concepts::failed************ boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/iterator/iterator_concepts.hpp:116:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:134:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:234:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >, boost::concepts::constraint<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >, boost::concepts::requirement<boost::concepts::failed************ boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:150:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::constraint<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::requirement<boost::concepts::failed************ boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:156:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::constraint<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::requirement<boost::concepts::failed************ boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:276:9:   required from ‘struct boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:316:12:   required from ‘struct boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:156:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  156 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:282:9:   required from ‘struct boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:316:12:   required from ‘struct boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:138:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:179:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >, boost::concepts::constraint<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >, boost::concepts::requirement<boost::concepts::failed************ boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 16 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:189:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::constraint<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::requirement<boost::concepts::failed************ boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:195:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::constraint<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >, boost::concepts::requirement<boost::concepts::failed************ boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:319:9:   required from ‘struct boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   required from ‘struct boost::mpl::if_<boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >, boost::concepts::constraint<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >, boost::concepts::requirement<boost::concepts::failed************ boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >::************> >’
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:50:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:195:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  195 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept/assert.hpp:35,
                 from /home/linman/boost_1_58_0/boost/concept_check.hpp:20,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >]’:
/home/linman/boost_1_58_0/boost/range/algorithm/max_element.hpp:43:5:   required from ‘std::pair<typename boost::range_iterator<const T>::type, typename boost::range_iterator<const T>::type> boost::range::equal_range(const ForwardRange&, const Value&) [with ForwardRange = std::vector<owlcpp::Triple>; Value = owlcpp::map_triple_detail::Value_predicate<owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag, owlcpp::Node_id, owlcpp::Any, owlcpp::Any>; typename boost::range_iterator<const T>::type = std::vector<owlcpp::Triple>::const_iterator]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_set.hpp:204:32:   required from ‘static owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::range owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::find(const storage&, owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::Q1, owlcpp::Any, owlcpp::Any) [with Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::storage = std::vector<owlcpp::Triple>; owlcpp::map_triple_detail::Ts_query_dispatch<Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag1>::type, owlcpp::Any, owlcpp::Any>::Q1 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_set.hpp:363:45:   required from ‘typename owlcpp::map_triple_detail::Triple_set<Tag1, Tag2, Tag3>::query<Q1, Q2, Q3>::range owlcpp::map_triple_detail::Triple_set<Tag1, Tag2, Tag3>::find(Q1, Q2, Q3) const [with Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_set<Tag1, Tag2, Tag3>::query<Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47: warning: ‘this’ pointer is null [-Wnonnull]
   38 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /home/linman/boost_1_58_0/boost/range/size_type.hpp:20,
                 from /home/linman/boost_1_58_0/boost/range/size.hpp:21,
                 from /home/linman/boost_1_58_0/boost/range/functions.hpp:20,
                 from /home/linman/boost_1_58_0/boost/range.hpp:18,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/map_doc.hpp:14,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:11,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/range/concepts.hpp:316:12: note: in a call to non-static member function ‘boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >::~ForwardRangeConcept()’
  316 |     struct ForwardRangeConcept : SinglePassRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~
In file included from /home/linman/boost_1_58_0/boost/concept_check.hpp:32,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/store_concepts.hpp:9,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/crtpb_ns_node_iri.hpp:12,
                 from /home/linman/owl_cpp/include/owlcpp/rdf/triple_store.hpp:8,
                 from parse_owl.cpp:5:
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:168:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:123:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 14 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:168:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  168 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 19 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:134:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:134:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  134 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:234:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:145:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   [ skipping 13 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:234:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  234 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 18 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:156:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:156:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  156 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:282:9:   required from ‘struct boost::SinglePassRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:316:12:   required from ‘struct boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::ForwardRangeConcept<const std::vector<owlcpp::Triple> > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = const std::vector<owlcpp::Triple>]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:282:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  282 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:138:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:179:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:138:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  138 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 17 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/concept_check.hpp:209:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  209 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/home/linman/boost_1_58_0/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’:
/home/linman/boost_1_58_0/boost/concept/detail/general.hpp:38:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >]’
/home/linman/boost_1_58_0/boost/range/concepts.hpp:195:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >::value’
/home/linman/boost_1_58_0/boost/concept/detail/has_constraints.hpp:45:31:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > > >’
/home/linman/boost_1_58_0/boost/mpl/if.hpp:63:11:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:175:24:   required from ‘static owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::find(const storage&, const Q0&, const Q1&, const Q2&, const Q3&) [with Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; Q1 = owlcpp::Node_id; Q2 = owlcpp::Any; Q3 = owlcpp::Any; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>; owlcpp::map_triple_detail::Query_dispatch<Map, Tag0, Tag1, Tag2, Tag3, typename boost::mpl::at<owlcpp::Triple, Tag2>::type, Q1, Q2, Q3>::Q0 = owlcpp::Node_id]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:232:31:   required from ‘static owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::find(const storage&, const Subj&, const Pred&, const Obj&, const Doc&) [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >; owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::storage = owlcpp::map_triple_detail::Triple_index_vector_impl<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>]’
/home/linman/owl_cpp/include/owlcpp/rdf/detail/triple_index.hpp:258:44:   required from ‘typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::find(const Subj&, const Pred&, const Obj&, const Doc&) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Map = owlcpp::map_triple_detail::Triple_index_vector_impl; Tag0 = owlcpp::Subj_tag; Tag1 = owlcpp::Pred_tag; Tag2 = owlcpp::Obj_tag; Tag3 = owlcpp::Doc_tag; typename owlcpp::map_triple_detail::Triple_index<Map, Tag0, Tag1, Tag2, Tag3>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple.hpp:122:55:   required from ‘typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple<Config, Empty>::find(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Config = boost::mpl::vector2<boost::mpl::vector4<owlcpp::Subj_tag, owlcpp::Pred_tag, owlcpp::Obj_tag, owlcpp::Doc_tag>, boost::mpl::vector4<owlcpp::Obj_tag, owlcpp::Pred_tag, owlcpp::Subj_tag, owlcpp::Doc_tag> >; bool <anonymous> = false; typename owlcpp::Map_triple<Config, Empty>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
/home/linman/owl_cpp/include/owlcpp/rdf/map_triple_crtpb.hpp:70:32:   required from ‘typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range owlcpp::Map_triple_crtpb<Super>::find_triple(Subj, Pred, Obj, Doc) const [with Subj = owlcpp::Node_id; Pred = owlcpp::Node_id; Obj = owlcpp::Any; Doc = owlcpp::Any; Super = owlcpp::Triple_store; typename owlcpp::Map_triple_crtpb<Super>::query<Subj, Pred, Obj, Doc>::range = boost::iterator_range<__gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> > >]’
parse_owl.cpp:19:72:   required from here
/home/linman/boost_1_58_0/boost/concept/usage.hpp:16:48: warning: ‘this’ pointer is null [-Wnonnull]
   16 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/home/linman/boost_1_58_0/boost/concept/usage.hpp:30:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const owlcpp::Triple*, std::vector<owlcpp::Triple> >]’
   30 |       ~model()
      |       ^
/home/linman/boost_1_58_0/boost/range/concepts.hpp:195:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  195 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~

    "g++"  -ftemplate-depth-128 -O3 -finline-functions -Wno-inline -Wall  -DBOOST_FILESYSTEM_STATIC_LINK=1 -DBOOST_SYSTEM_STATIC_LINK=1 -DNDEBUG  -I"/home/linman/boost_1_58_0" -I"/home/linman/iros_driver/src/include" -I"/home/linman/owl_cpp/include" -I"/home/linman/owl_cpp/out/include" -I"/home/linman/owl_cpp/out/include/raptor" -c -o "/home/linman/iros_driver/src/out/gcc-11/release/link-static/parse_owl.o" "parse_owl.cpp"

...failed gcc.compile.c++ /home/linman/iros_driver/src/out/gcc-11/release/link-static/parse_owl.o...
...skipped <p/home/linman/iros_driver/src/out/gcc-11/release/link-static>iros_driver for lack of <p/home/linman/iros_driver/src/out/gcc-11/release/link-static>parse_owl.o...
...failed updating 1 target...
...skipped 1 target...
